upstream frontend {
    server localhost:3000;
}

upstream api-gateway {
    server localhost:28000;
}
server {
    server_name <your-server-url>;

    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off; # SSE를 사용할 때 버퍼링을 비활성화합니다.
        proxy_read_timeout 1800s; # 30분 동안 연결을 유지하도록 타임아웃 설정 (단위: 초)
        client_body_timeout 1800s; # 클라이언트 측에서도 30분 동안 연결을 유지하도록 설정
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
 }


    location /api {
        rewrite ^/api(/.*)$ $1 break;
        proxy_pass http://api-gateway;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off; # SSE를 사용할 때 버퍼링을 비활성화합니다.
        proxy_read_timeout 1800s; # 30분 동안 연결을 유지하도록 타임아웃 설정 (단위: 초)
        client_body_timeout 1800s; # 클라이언트 측에서도 30분 동안 연결을 유지하도록 설정
         }




    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/algopat.kr/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/algopat.kr/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = <your-server-url>) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name <your-server-url>;
    listen 80;
    return 404; # managed by Certbot


}

server {
    if ($host = <your-server-url>) {
        return 301 <your-server-full-url>$request_uri;
    }

    server_name <your-server-url>;
    listen 80;
    return 404;
}
